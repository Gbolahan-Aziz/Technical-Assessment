- name: Create K3s Cluster via Rancher API
  hosts: rancher
  become: yes
  tasks:
    - name: Run Registration Command on K3s VM
      shell: |
        sudo apt update && sudo apt install -y ansible python3-pip
        pip3 install requests
        echo "Dependencies installation completed"
      delegate_to: k3s
    - name: Generate Rancher API Key
      shell: |
        RANCHER_URL="https://192.168.56.10"
        ADMIN_PASSWORD="admin"
        LOGIN_RESPONSE=$(curl -s "$RANCHER_URL/v3-public/localProviders/local?action=login" \
          -H 'Content-Type: application/json' \
          --data-binary "{\"username\":\"admin\",\"password\":\"$ADMIN_PASSWORD\"}")
        RANCHER_TOKEN=$(echo $LOGIN_RESPONSE | jq -r .token)
        echo "RANCHER_TOKEN=$RANCHER_TOKEN" >> /tmp/rancher_token

    - name: Create K3s Cluster
      shell: |
        RANCHER_URL="https://192.168.56.10"
        RANCHER_TOKEN=$(cat /tmp/rancher_token)
        CLUSTER_JSON=$(curl -s -X POST "$RANCHER_URL/v3/clusters" \
          -H "Authorization: Bearer $RANCHER_TOKEN" \
          -H "Content-Type: application/json" \
          --data '{
            "type": "cluster",
            "name": "k3s-cluster",
            "k3sConfig": {
              "serverConcurrency": 10,
              "disableComponents": ["servicelb", "traefik"]
            }
          }')
        CLUSTER_ID=$(echo $CLUSTER_JSON | jq -r .id)
        if [ "$CLUSTER_ID" == "null" ] || [ -z "$CLUSTER_ID" ]; then
          echo "Failed to create the cluster. Response: $CLUSTER_JSON"
          exit 1
        fi
        echo "CLUSTER_ID=$CLUSTER_ID" >> /tmp/cluster_id

    - name: Get Registration Command
      shell: |
        RANCHER_URL="https://192.168.56.10"
        RANCHER_TOKEN=$(cat /tmp/rancher_token)
        CLUSTER_ID=$(cat /tmp/cluster_id)
        curl -s -X GET "$RANCHER_URL/v3/clusterregistrationtokens?clusterId=$CLUSTER_ID" \
          -H "Authorization: Bearer $RANCHER_TOKEN" | jq -r '.data[0].nodeCommand'
      register: registration_command

    - name: Run Registration Command on K3s VM
      shell: "{{ registration_command.stdout }}"
      delegate_to: k3s

