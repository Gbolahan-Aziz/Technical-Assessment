name: Setup And Deploy Climate Monitor App

on:
  push:
    branches:
      - xxx
    

jobs:
  build-application:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Lint Code Base
      uses: github/super-linter@v4

    - name: Log into registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}


    - name: Set tag
      run: |
        echo "TAG_OR_SHA=$(if [[ $GITHUB_REF == refs/tags/* ]]; then echo ${GITHUB_REF#refs/tags/}; else echo $GITHUB_SHA; fi)"
        echo "TAG_OR_SHA=$(if [[ $GITHUB_REF == refs/tags/* ]]; then echo ${GITHUB_REF#refs/tags/}; else echo $GITHUB_SHA; fi)" >> "$GITHUB_ENV"
        

    - name: Build Docker Image
      run: |
        docker build . -t iamzee007/flask-climate-app:${{ env.TAG_OR_SHA }}

    - name: Push Image To Registry
      run: |
        docker push /iamzee007/flask-climate-app:${{ env.TAG_OR_SHA }}


  deploy-infrastructure:
    name: "Deploy Application Infrastructure"
    runs-on: ubuntu-latest
    timeout-minutes: 45
    defaults:
      run:
        working-directory: './terraform/'
        
    concurrency: 
      group: app-deployment
      cancel-in-progress: true

    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v2

      - name: Configure cloud credentials
        uses: xxx
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy Container/Webapp/Kubernetes Service
        uses: ./.github/actions/deploy-infra
        id: deploy_infra

  deploy-application:
    name: "CD"
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    defaults:
      run:
        working-directory: ./
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cloud Service Login
      uses: xxx
         
    - name: Log into registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}

  
    - name: Pulling Artifacts
      run: |   
        docker pull iamzee007/flask-climate-app:${{ github.sha }}
      

    - name: deploy to webapp
      uses: xxx
      with:
        app-name: 'flask-climate-app'
        images: 'iamzee007/flask-climate-app:${{ steps.set_tag.outputs.tag }}'


      
